window.WaypointEditorView = class
  EMPTY_WAYPOINT = {lat: null, lon: null}

  constructor: (options) ->
    @selected_index = null

    @mission_view = options.mission_view
    @form_container = options.form_container
    @select_waypoints_el = options.select_waypoints
    @select_waypoints_el.find('li>a').click @_on_form_waypoint_select if @select_waypoints_el.find('li>a')
    
    @delete_waypoint_el = options.delete_waypoint

    @delete_waypoint_el.click @_on_form_delete if @delete_waypoint_el?

    @mission_view.on_select =>
      if @mission_view.selected_mission?
        @select_waypoints_el.find('a.btn').removeClass('disabled')
        # TODO
    @mission_view.on_delete =>
      @selected_index = null
      @_update_form_state()

  _on_form_waypoint_select: (e) =>
    e.preventDefault()
    waypoint_anc = $(e.target)
    if waypoint_anc.html() is 'Create New'
      waypoints = @mission_view.selected_mission.waypoints.value()
      waypoints.push EMPTY_WAYPOINT 
      @mission_view.selected_mission.waypoints.set(waypoints)
      @selected_index = waypoints.length - 1
      @_append_waypoint_option "Waypoint #{@selected_index + 1}", @selected_index
      @_update_form_state()
    else 
      console.log "Selection made"
      console.log waypoint_anc

  _update_form_state: ->
    if @selected_index?
      console.log "Hmm"
      @_form_value 'offset', @selected_index
      @_form_value 'location', 'todo'
      @_form_value 'length', 'todo'
      @delete_waypoint_el.removeClass 'disabled'
    else
      @form_container.find('td').html('<span class="muted">(None)</span>')
      for el in [@delete_waypoint_el, @select_waypoints_el.find('a.btn')]
        el.addClass('disabled')

  _on_form_delete: (e) =>
    e.preventDefault()
    unless $(e.target).hasClass('disabled')
      console.log "TODO: delete the waypoint"
  _append_waypoint_option: (label, id) ->
    new_option_html = @_select_option label, id
    new_option = $(new_option_html).insertBefore @select_waypoints_el.find('ul li.divider')
    $(new_option).click @_on_form_waypoint_select
    return new_option
  _form_value: (attr, value) ->
    @form_container.find(".#{attr}").html(value)
  _select_option: (label, index) ->
    "<li><a href=\"#\" tabindex=\"-1\" data-waypoint-id=\"#{index}\">#{label}</a></li>"


window.MissionModel = class extends Model
  DEFAULT_ATTRIBUTES: {center_lat: 26.214726, center_lon: -80.168894, \
    title: "New Mission", zoom: 18, is_looping: false, waypoints: []}
  VALID_TITLE = /^[a-z0-9\!\@\#\$\%\^\&\(\)\\\/\|\_\-\<\>\. ]+$/i
  VALID_ZOOM = /^([0-9]|1[0-9]|2[01])$/
  VALID_GPSCOORD = /^[\-]?[0-9]{1,3}\.[0-9]+$/

  constructor: (attributes = {}, is_persisted = false) -> 
    if attributes.hasOwnProperty 'created_at'
      attributes.created_at = new Date attributes.created_at
    else
      attributes.created_at = new Date()

    super $.extend( {}, MissionModel::DEFAULT_ATTRIBUTES, attributes), is_persisted

    @_validate 'title', (title) ->
      if ( MissionModel.find(title: title).length is 1 ) \
        and VALID_TITLE.exec(title) then true else false
    @_validate 'zoom', (zoom) ->
      if VALID_ZOOM.exec(zoom) then true else false
    @_validate 'center_lat', (center_lat) ->
      if VALID_GPSCOORD.exec(center_lat) then true else false
    @_validate 'center_lon', (center_lon) ->
      if VALID_GPSCOORD.exec(center_lon) then true else false
    @_validate 'is_looping', (is_looping) ->
      if (is_looping is true) or (is_looping is false) then true else false

  distance: -> 0

  run: ->
    console.log "TODO: Run!"

  save: ->
    @_send_command 'save_mission', @to_json()
    super
  destroy: ->
    @_send_command 'destroy_mission', @id()
    super
  _send_command: (command, params...) ->
    window.ws.send JSON.stringify( $.extend({}, window.ROBOT_MSG, \ 
      {commandid: command, command_params: params }) )

window.MissionController = class extends Controller
  MISSIONS_MSG = {requestid: 'robot_command', robotid: 'NavigatorMax', commandid: 'missions'}

  constructor:  ->
    super
    default_attrs = MissionModel::DEFAULT_ATTRIBUTES

    @map = new GpsMapView $('#mission_map')[0], default_attrs.center_lat, 
      default_attrs.center_lon, { zoom: default_attrs.zoom, is_drawing_center: false,
      tile_source: (zoom, tx, ty) -> "/images/gmap-tiles-512/#{zoom}/#{tx}-#{ty}.png" }

    @mission_edit = new MissionEditorView select_missions: $('#missions_dropdown'), \
      delete_mission: $('#delete_mission'), \
      save_mission: $('#save_mission'), \
      run_mission: $('#run_mission'), \
      form_container: $('#mission_properties')
    @waypoint_edit = new WaypointEditorView mission_view: @mission_edit, \
      select_waypoints: $('#waypoints_dropdown'), \
      delete_waypoint: $('#delete_waypoint'), \
      form_container: $('#waypoint_properties')

    @dash_offset = 0;

  on_connect: (ws) -> ws.send JSON.stringify MISSIONS_MSG

  on_message: (data) ->
    # We Handle this ourselves
    switch data.request.commandid
      when 'save_mission'
        @mission_edit.save_complete()
      when 'destroy_mission'
        @mission_edit.destroy_complete()
      when 'missions'
        new MissionModel attributes, true for id, attributes of data.result
        @mission_edit.missions_updated()

  render: ->
    @map.render()

    dashList = [12, 6]

    @dash_offset += 1

    @map.ctx.save()
    @map.ctx.beginPath()
    @map.ctx.setLineDash(dashList)
    @map.ctx.lineDashOffset = @dash_offset
    @map.ctx.moveTo(0,0)
    @map.ctx.lineTo(@map.ctx.canvas.width,@map.ctx.canvas.height)
    @map.ctx.lineWidth = 2.0
    @map.ctx.strokeStyle = 'ffffff'
    @map.ctx.stroke()
    @map.ctx.restore()
